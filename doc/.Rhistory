ggplot(MWS_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in MWS's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
# class material
png("../figs/graph1.png")
ggplot(MWS_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in MWS's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
dev.off()
packages.used <- c("ggplot2", "dplyr", "tibble", "tidyr",  "stringr", "tidytext", "topicmodels", "wordcloud")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(stringr)
library(tidytext)
library(topicmodels)
library(wordcloud)
source("../libs/multiplot.R")
packages.used <- c("ggplot2", "dplyr", "tibble", "tidyr",  "stringr", "tidytext", "topicmodels", "wordcloud")
# check packages that need to be installed.
packages.needed <- setdiff(packages.used, intersect(installed.packages()[,1], packages.used))
# install additional packages
if(length(packages.needed) > 0) {
install.packages(packages.needed, dependencies = TRUE, repos = 'http://cran.us.r-project.org')
}
library(ggplot2)
library(dplyr)
library(tibble)
library(tidyr)
library(stringr)
library(tidytext)
library(topicmodels)
library(wordcloud)
source("../libs/multiplot.R")
spooky <- read.csv('../data/spooky.csv', as.is = TRUE)
head(spooky)
summary(spooky)
sum(is.na(spooky))
spooky$author <- as.factor(spooky$author)
spooky_wrd <- unnest_tokens(spooky, word, text)
spooky_wrd <- anti_join(spooky_wrd, stop_words, by = "word")
words <- count(group_by(spooky_wrd, word))$word
freqs <- count(group_by(spooky_wrd, word))$n
head(sort(freqs, decreasing = TRUE))
wordcloud(words, freqs, max.words = 14, min.freq = 3, scale = c(4,5), vfont = c("sans serif","plain"), color = c("purple4", "red4", "black"))
author_words <- count(group_by(spooky_wrd, word, author))
all_words    <- rename(count(group_by(spooky_wrd, word)), all = n)
author_words <- left_join(author_words, all_words, by = "word")
author_words <- arrange(author_words, desc(all))
author_words <- ungroup(head(author_words, 81))
ggplot(author_words) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none") +
theme_bw(base_family = 'Helvetica')
get_sentiments('nrc')
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by = "word")
count(sentiments, sentiment)
count(sentiments, author, sentiment)
ggplot(count(sentiments, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment))+
theme_bw(base_family = 'Helvetica')
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none") +
theme_bw(base_family = 'Helvetica')
nrc_pos    <- filter(get_sentiments('nrc'), sentiment == "positive")
nrc_pos
positive <- inner_join(spooky_wrd, nrc_pos, by = "word")
head(positive)
count(positive, word, sort = TRUE)
pos_words     <- count(group_by(positive, word, author))
pos_words_all <- count(group_by(positive, word))
pos_words <- left_join(pos_words, pos_words_all, by = "word")
pos_words <- arrange(pos_words, desc(n.y))
pos_words <- ungroup(head(pos_words, 81))
# Note the above is the same as
# pos_words <- pos_words  %>%
#                left_join(pos_words_all, by = "word") %>%
#                arrange(desc(n.y)) %>%
#                head(81) %>%
#                ungroup()
ggplot(pos_words) +
geom_col(aes(reorder(word, n.y, FUN = min), n.x, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none") +
theme_bw(base_family = 'Helvetica')
sent_wrd_freqs <- count(spooky_wrd, id, word)
head(sent_wrd_freqs)
spooky_wrd_tm <- cast_dtm(sent_wrd_freqs, id, word, n)
spooky_wrd_tm
length(unique(spooky_wrd$id))
length(unique(spooky_wrd$word))
spooky_wrd_lda    <- LDA(spooky_wrd_tm, k = 12, control = list(seed = 1234))
spooky_wrd_topics <- tidy(spooky_wrd_lda, matrix = "beta")
spooky_wrd_topics
spooky_wrd_topics_5 <- ungroup(top_n(group_by(spooky_wrd_topics, topic), 5, beta))
spooky_wrd_topics_5 <- arrange(spooky_wrd_topics_5, topic, -beta)
spooky_wrd_topics_5 <- mutate(spooky_wrd_topics_5, term = reorder(term, beta))
ggplot(spooky_wrd_topics_5) +
geom_col(aes(term, beta, fill = factor(topic)), show.legend = FALSE) +
facet_wrap(~ topic, scales = "free", ncol = 4) +
coord_flip()
spooky_wrd_topics <- mutate(spooky_wrd_topics, topic = paste0("topic", topic))
spooky_wrd_topics <- spread(spooky_wrd_topics, topic, beta)
spooky_wrd_topics_12 <- filter(spooky_wrd_topics, topic2 > .001 | topic3 > .001)
spooky_wrd_topics_12 <- mutate(spooky_wrd_topics_12, log_ratio = log10(topic2 / topic1))
spooky_wrd_topics_12 <- group_by(spooky_wrd_topics_12, direction = log_ratio > 0)
spooky_wrd_topics_12 <- ungroup(top_n(spooky_wrd_topics_12, 5, abs(log_ratio)))
spooky_wrd_topics_12 <- mutate(spooky_wrd_topics_12, term = reorder(term, log_ratio))
p1 <- ggplot(spooky_wrd_topics_12) +
geom_col(aes(term, log_ratio, fill = log_ratio > 0)) +
theme(legend.position = "none") +
labs(y = "Log ratio of beta in topic 2 / topic 1") +
coord_flip()
spooky_wrd_topics_23 <- filter(spooky_wrd_topics, topic2 > .001 | topic3 > .001)
spooky_wrd_topics_23 <- mutate(spooky_wrd_topics_23, log_ratio = log10(topic3 / topic2))
spooky_wrd_topics_23 <- group_by(spooky_wrd_topics_23, direction = log_ratio > 0)
spooky_wrd_topics_23 <- ungroup(top_n(spooky_wrd_topics_23, 5, abs(log_ratio)))
spooky_wrd_topics_23 <- mutate(spooky_wrd_topics_23, term = reorder(term, log_ratio))
p2 <- ggplot(spooky_wrd_topics_23) +
geom_col(aes(term, log_ratio, fill = log_ratio > 0)) +
theme(legend.position = "none") +
labs(y = "Log ratio of beta in topic 3 / topic 2") +
coord_flip()
spooky_wrd_topics_13 <- filter(spooky_wrd_topics, topic3 > .001 | topic1 > .001)
spooky_wrd_topics_13 <- mutate(spooky_wrd_topics_13, log_ratio = log10(topic3 / topic1))
spooky_wrd_topics_13 <- group_by(spooky_wrd_topics_13, direction = log_ratio > 0)
spooky_wrd_topics_13 <- ungroup(top_n(spooky_wrd_topics_13, 5, abs(log_ratio)))
spooky_wrd_topics_13 <- mutate(spooky_wrd_topics_13, term = reorder(term, log_ratio))
p3 <- ggplot(spooky_wrd_topics_13) +
geom_col(aes(term, log_ratio, fill = log_ratio > 0)) +
theme(legend.position = "none") +
labs(y = "Log ratio of beta in topic 3 / topic 2") +
coord_flip()
layout <- matrix(c(1,2,3), 3, 1, byrow = TRUE)
multiplot(p1, p2, p3, layout = layout)
layout <- matrix(c(1,2,3), 3, 1, byrow = TRUE)
multiplot(p1, p2, p3, layout = layout)
p1 <- ggplot(EAP_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in EAP's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
p2 <- ggplot(HPL_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in HPL's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
p3 <- ggplot(MWS_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in MWS's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
layout <- matrix(c(1,2,3), 3, 1, byrow = TRUE)
multiplot(p1, p2, p3, layout = layout)
p1 <- ggplot(MWS_po, aes(x="", y=counts, fill=pronoun))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0)
p2 <- ggplot(HPL_po, aes(x="", y=counts, fill=pronoun))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0)
p3 <- ggplot(EAP_po, aes(x="", y=counts, fill=pronoun))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0)
layout <- matrix(c(1,2,3), 3, 1, byrow = TRUE)
multiplot(p1, p2, p3, layout = layout)
gender <- data_counts_by_author %>%
spread(word1, counts, fill = 0)
temp_male <- gender %>%
spread(word2, he, fill = 0) %>%
group_by(author) %>%
summarise_if(is.numeric,sum) %>%
ungroup() %>%
rename(gender = "she") %>%
mutate(gender = "male")
temp_female <- gender %>%
spread(word2, she, fill = 0) %>%
group_by(author) %>%
summarise_if(is.numeric,sum) %>%
ungroup() %>%
rename(gender = "he") %>%
mutate(gender = "female")
gender <- rbind(temp_male, temp_female)
gender$author <- as.character(gender$author)
first_row <- c("","",rep("sample", 1134) %>%
paste0(1:1134))
second_row <- c("", "", colnames(gender)[-c(1,2)])
gender <- rbind(first_row,second_row, gender) %>%
as.matrix()
colnames(gender) <- NULL
gender <- t(gender)
write.table(gender, "../data/pam.txt", sep = "\t", row.names = FALSE, col.names = FALSE)
gender.data <- pamr.from.excel("../data/pam.txt", ncols = 8, sample.labels = TRUE)
# khan.data <- pamr.from.excel("../data/khan.txt", ncols = 65, sample.labels = TRUE)
pamr.menu(gender.data)
gender.data$newy <- pamr.makeclasses(gender.data)
gender.data$newy <- pamr.makeclasses(gender.data)
gender.data$newy <- pamr.makeclasses(khan.data)
khan.data <- pamr.from.excel("../data/khan.txt", ncols = 1164, sample.labels = TRUE)
khan.data <- pamr.from.excel("../data/khan.txt", ncols = 1166, sample.labels = TRUE)
khan.data <- pamr.from.excel("../data/khan.txt", ncols = 63, sample.labels = TRUE)
gender.data$newy <- pamr.makeclasses(gender.data)
gender.data$newy <- pamr.makeclasses(gender.data)
gender.data$newy <- pamr.makeclasses(gender.data)
gender.data$newy <- pamr.makeclasses(gender.data)
?pamr.train
train <- pamr.train(gender.data)
gender.cv <- pamr.cv(gender.train, gender.data)
gender.train <- pamr.train(gender.data)
gender.cv <- pamr.cv(gender.train, gender.data)
pamr.plotcvprob(gender.train, gender.cv, 2.3)
pamr.plotcvprob(gender.train, gender.cv, 2)
pamr.plotcvprob(gender.train, gender.cv, 1)
pamr.plotcvprob(gender.train, gender.cv, 3)
set.seed(120)
x <- matrix(rnorm(1000*20),ncol=20)
y <- sample(c(1:4),size=20,replace=TRUE)
mydata <- list(x=x,y=y)
mytrain <- pamr.train(mydata)
mycv <- pamr.cv(mytrain,mydata)
pamr.plotcvprob(mycv,mydata,threshold=1.6)
pamr.plotcvprob(gender.train, gender.cv, 3)
pamr.plotcvprob(gender.train, gender.cv, 7)
pamr.plotcvprob(gender.train, gender.cv, 10)
pamr.plotcvprob(gender.train, gender.cv, 6)
pamr.plotcvprob(gender.train, gender.cv, 8)
pamr.plotcvprob(gender.train, gender.cv, 7)
library("xts")
# install.packages("dplyr")
library('dplyr') # data manipulation
# library('readr') # input/output
# library('data.table') # data manipulation
# install.packages('tibble')
library('tibble') # data wrangling
# library('tidyr') # data wrangling
# library('stringr') # string manipulation
# library('forcats') # factor manipulation
# install.packages('tidytext')
library('tidytext')
# install.packages("magrittr")
library('magrittr')
# install.packages("tidyr")
library("tidyr")
# install.packages("ggplot2")
library("ggplot2")
# install.packages("plotly")
library("plotly")
# install.packages("pamr")
library("pamr")
library(wordcloud)
source("../lib/multiplot.R")
khan.data <- pamr.from.excel("../data/khan.txt", ncols = 65, sample.labels = TRUE)
khan.train <- pamr.train(khan.data)
pamr.cv(khan.train, khan.data)
pamr.geneplot(khan.train, khan.data, 1.6)
graphics.off()
pamr.geneplot(khan.train, khan.data, 1.6)
par(mar=c(1,1,1,1))
pamr.geneplot(khan.train, khan.data, 1.6)
pamr.geneplot(khan.train, khan.data, 1.6)
pamr.geneplot(khan.train, khan.data, 1.6)
# We want to treat each column as characters, not factors, except for the author column.
spooky <- read.csv('../data/spooky.csv', colClasses = 'character')
spooky <- as.tibble(spooky)
spooky$author <- as.factor(spooky$author)
summary(spooky)
# First use tidytext function to drop the punctuations and tokenize our file.
# We use bigrams because we want the word following the pronouns "he" and "she".
pronouns <- c("he","she")
data <- spooky %>%
unnest_tokens(word, text, token = "ngrams", n = 2, to_lower = TRUE, drop = TRUE)
data_counts <- data %>%
count(word, sort = TRUE) %>%
separate(word, c("word1","word2"), sep = " ", remove = TRUE) %>%
filter(word1 %in% pronouns) %>%
filter(word2 != "he") %>%
count(word1, word2, wt = n, sort = TRUE) %>%
rename(counts = "nn")
all_po <- data.frame(
count(data_counts, word1)
)
all_po <- all_po %>%
rename(counts = "n",
pronouns = "word1")
png("../figs/po1.png")
ggplot(all_po, aes(x="", y=counts, fill=pronouns))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0) +
ggtitle("pronoun occurence in total")
dev.off()
data_counts_by_author <- data %>%
count(author, word, sort = TRUE) %>%
separate(word, c("word1","word2"), sep = " ", remove = TRUE) %>%
filter(word1 %in% pronouns) %>%
filter(word2 != "he") %>%
rename(counts = "n")
MWS_po <- data_counts_by_author %>%
filter(author == "MWS") %>%
count(word1) %>%
rename(pronoun = "word1", counts = "n")
HPL_po <- data_counts_by_author %>%
filter(author == "HPL") %>%
count(word1) %>%
rename(pronoun = "word1", counts = "n")
EAP_po <- data_counts_by_author %>%
filter(author == "EAP") %>%
count(word1) %>%
rename(pronoun = "word1", counts = "n")
p1 <- ggplot(MWS_po, aes(x="", y=counts, fill=pronoun))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0) +
ggtitle("MWS pronoun occurence")
p2 <- ggplot(HPL_po, aes(x="", y=counts, fill=pronoun))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0) +
ggtitle("HPL pronoun occurence")
p3 <- ggplot(EAP_po, aes(x="", y=counts, fill=pronoun))+
geom_bar(width = 1, stat = "identity")+
coord_polar("y", start = 0) +
ggtitle("EAP pronoun occurence")
layout <- matrix(c(1,2,3), 3,1, byrow = TRUE)
png("../figs/po2.png")
multiplot(p1, p2, p3, layout = layout)
dev.off()
word_ratios <- data_counts %>%
group_by(word2) %>%
filter(sum(counts) > 10) %>%
ungroup() %>%
spread(word1, counts, fill = 0) %>%
mutate_if(is.numeric, funs((. + 1) / sum(. + 1))) %>%
mutate(logratio = log2(she / he)) %>%
arrange(desc(logratio))
# Equally likely:
equal <- word_ratios %>%
mutate(abslogratio = abs(logratio)) %>%
arrange(abslogratio)
words <- equal$word2
freqs <- equal$abslogratio
wordcloud(words, freqs, max.words = 14, min.freq = -0.25, scale = c(4,.5), vfont = c("sans serif","plain"), color = c("purple4", "red4", "black"))
# Large difference:
png("../figs/verbs1.png")
word_ratios %>%
mutate(abslogratio = abs(logratio)) %>%
group_by(logratio < 0) %>%
top_n(15, abslogratio) %>%
ungroup() %>%
mutate(word = reorder(word2, logratio)) %>%
ggplot(aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x = word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he'",
title = "Words paired with 'he' and 'she'",
subtitle = "Women throw, sleep, and turn while men####") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
dev.off()
# Separately:
# EAP
EAP_word_ratios <- data_counts_by_author %>%
filter(author == "EAP") %>%
group_by(word2) %>%
filter(sum(counts) > 5) %>%
ungroup() %>%
spread(word1, counts, fill = 0) %>%
mutate_if(is.numeric, funs((. +1)/ sum(. +1))) %>%
mutate(logratio = log2(she / he)) %>%
arrange(desc(logratio)) %>%
mutate(abslogratio = abs(logratio)) %>%
group_by(logratio < 0) %>%
top_n(15,abslogratio) %>%
ungroup() %>%
mutate(word = reorder(word2, logratio))
jpeg("../figs/EAPverbs.jpeg", quality = 100)
ggplot(EAP_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in EAP's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
dev.off()
# HPL
HPL_word_ratios <- data_counts_by_author %>%
filter(author == "HPL") %>%
group_by(word2) %>%
filter(sum(counts) > 5) %>%
ungroup() %>%
spread(word1, counts, fill = 0) %>%
mutate_if(is.numeric, funs((. +1)/ sum(. +1))) %>%
mutate(logratio = log2(she / he)) %>%
arrange(desc(logratio)) %>%
mutate(abslogratio = abs(logratio)) %>%
group_by(logratio < 0) %>%
top_n(15,abslogratio) %>%
ungroup() %>%
mutate(word = reorder(word2, logratio))
jpeg("../figs/HPLverbs.jpeg", quality = 100)
ggplot(HPL_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in HPL's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
dev.off()
# MWS
MWS_word_ratios <- data_counts_by_author %>%
filter(author == "MWS") %>%
group_by(word2) %>%
filter(sum(counts) > 5) %>%
ungroup() %>%
spread(word1, counts, fill = 0) %>%
mutate_if(is.numeric, funs((. +1)/ sum(. +1))) %>%
mutate(logratio = log2(she / he)) %>%
arrange(desc(logratio)) %>%
mutate(abslogratio = abs(logratio)) %>%
group_by(logratio < 0) %>%
top_n(15,abslogratio) %>%
ungroup() %>%
mutate(word = reorder(word2, logratio))
jpeg("../figs/MWSverbs.jpeg", quality = 100)
ggplot(MWS_word_ratios, aes(word, logratio, color = logratio < 0)) +
geom_segment(aes(x=word, xend = word,
y = 0, yend = logratio),
size = 1.1, alpha = 0.6) +
geom_point(size = 3.5) +
coord_flip() +
labs(x = NULL,
y = "Relative appearance after 'she' compared to 'he' in MWS's novels",
title = "Words paired with 'he' and 'she'") +
scale_color_discrete(name = "", labels = c("More 'she'", "More 'he'")) +
scale_y_continuous(breaks = seq(-3, 3),
labels = c("0.125x", "0.25x", "0.5x",
"Same", "2x", "4x", "8x"))
dev.off()
pamr.plotcv(khan.train)
